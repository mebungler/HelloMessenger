<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:HelloMessanger">
    <!--Base text block style-->
    <Style TargetType="TextBlock" x:Key="HeaderText" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground" Value="GhostWhite" />
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="0,4"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource TimesNewRoman}"></Setter>
    </Style>

    <!--Base TextBox style-->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0 0 0 1"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"></Setter>
        <Setter Property="Margin" Value="0 5 0 5"></Setter>
        <Setter Property="Padding" Value="10"></Setter>
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"></Setter>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"></Setter>
        <Setter Property="FontFamily" Value="none"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="PlaceHolder"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{StaticResource WhiteForegroundBrush}"
                                   FontSize="{StaticResource FontSizeLarge}"
                                   >
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Opacity" Value="0.3"></Setter>
                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger x:Name="TextBoxDataTrigger" Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Base PasswordBox style-->
    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0 0 0 1"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"></Setter>
        <Setter Property="Margin" Value="0 5 0 5"></Setter>
        <Setter Property="Padding" Value="10"></Setter>
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"></Setter>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"></Setter>
        <Setter Property="local:MonitorPasswordProperty.Value" Value="True"></Setter>
        <Setter Property="FontFamily" Value="none"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="PlaceHolder"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{StaticResource WhiteForegroundBrush}"
                                   FontSize="{StaticResource FontSizeLarge}"
                                   Visibility="{TemplateBinding local:HasTextProperty.Value,Converter={local:AttachedPropertyValueConvertor}}"
                                   >
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Opacity" Value="0.3"></Setter>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Base TextBox style(InTransparent)-->
    <Style x:Key="IntransparentTextBox"  TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource DarkerUIElementBrush}"></Setter>
        <Setter Property="BorderThickness" Value="0 0 0 1"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"></Setter>
        <Setter Property="Margin" Value="0 5 0 5"></Setter>
        <Setter Property="Padding" Value="10"></Setter>
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"></Setter>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"></Setter>
        <Setter Property="FontFamily" Value="none"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="PlaceHolder"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{StaticResource WhiteForegroundBrush}"
                                   FontSize="{StaticResource FontSizeLarge}"
                                   >
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Opacity" Value="0.3"></Setter>
                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger x:Name="TextBoxDataTrigger" Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Base TextBox style(InTransparent)-->
    <Style x:Key="TextBoxWithButton"  TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource DarkerUIElementBrush}"></Setter>
        <Setter Property="BorderThickness" Value="0 0 0 1"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"></Setter>
        <Setter Property="Margin" Value="0 5 0 5"></Setter>
        <Setter Property="Padding" Value="10"></Setter>
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"></Setter>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"></Setter>
        <Setter Property="FontFamily" Value="none"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="PlaceHolder"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{StaticResource WhiteForegroundBrush}"
                                   FontSize="{StaticResource FontSizeLarge}"
                                   >
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Opacity" Value="0.3"></Setter>
                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger x:Name="TextBoxDataTrigger" Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Button Cursor="Hand" HorizontalAlignment="Right" Grid.Column="1" Style="{StaticResource ControlButton}" FontSize="{StaticResource FontSizeLarge}" Content="&#xf115;"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ErrorMessage TextBlock-->
    <Style TargetType="TextBlock" x:Key="ErrorMessageStyle">
        <Setter Property="Foreground" Value="Red"></Setter>
        <Setter Property="Visibility" Value="Visible"></Setter>
        <Style.Triggers>
            <DataTrigger x:Name="TextBoxDataTrigger" Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                <Setter Property="Visibility" Value="Collapsed"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Menu header textblock-->
    <Style TargetType="TextBlock" x:Key="MenuHeaderTextBlock">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"/>
        <Setter Property="FontFamily" Value="{StaticResource RobotoBold}"/>
    </Style>
    <!--Spinning text-->
    <Style TargetType="{x:Type TextBlock}" x:Key="SpinningText">

        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="Text" Value="&#xf110;" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform></RotateTransform>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Storyboard x:Key="Spin">
                <DoubleAnimation
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                    From="0"
                    To="360"
                    Duration="0:0:2"
                    RepeatBehavior="Forever" />
            </Storyboard>
        </Style.Resources>

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="SpinStoryboard" Storyboard="{StaticResource Spin}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="SpinStoryboard" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>

    </Style>
</ResourceDictionary>